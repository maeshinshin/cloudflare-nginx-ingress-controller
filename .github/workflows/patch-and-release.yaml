name: Build and Release
on:
  push:
    branches:
      - 'release-v*'

jobs:
  patch:
    name: Patch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup yq
        uses: mikefarah/yq@v4.44.2

      - name: Update installer.yaml
        run: |
          IMAGE_TAG=$(echo "${{ github.ref_name }}" | sed 's/^release-//')
          IMG="ghcr.io/maeshinshin/integrated-ingress-controller:${IMAGE_TAG}" make build-installer

      - name: Update Chart and Values files
        run: |
          CHART_VERSION=$(echo "${{ github.ref_name }}" | sed 's/^release-v//')
          IMAGE_TAG=$(echo "${{ github.ref_name }}" | sed 's/^release-//')

          yq e '.version = "'$CHART_VERSION'"' -i 'charts/integrated-ingress-controller/Chart.yaml'
          yq e '.appVersion = "'$IMAGE_TAG'"' -i 'charts/integrated-ingress-controller/Chart.yaml'


      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create and Push Tag
        run: |
          TAG=$(echo "${{ github.ref_name }}" | sed 's/^release-//')
          git add charts/integrated-ingress-controller/Chart.yaml charts/integrated-ingress-controller/values.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update chart version to ${{ github.ref_name }} [skip ci]"
            git push origin ${{ github.ref_name }}
            git fetch origin main
            git checkout main
            git merge --no-ff ${{ github.ref_name }} -m "Merge branch '${{ github.ref_name }}' into main [skip ci]"
            git push origin main
            echo "âœ… Created and pushed tag $TAG"
          fi
  build-and-update:
    name: Build and Update
    runs-on: ubuntu-latest
    needs: patch
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path : |
            ~/.cache/go-build
            ~/.ko
            ~/.cache/ko
          key: go-vendor-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-vendor-
            go-

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Setup ko
        uses: ko-build/setup-ko@v0.9

      - name: Build and push image with ko
        id: ko-build
        env:
          KOCACHE: ~/.cache/ko
          KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
        run: |
          TAG=$(echo "${{ github.ref_name }}" | sed 's/^release-//')
          ko build --bare --platform=all --tags latest,${TAG} cmd/main.go

  release:
    name: Release Helm Chart
    runs-on: ubuntu-latest
    needs: build-and-update
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Pull Latest
        run: |
          git pull

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
